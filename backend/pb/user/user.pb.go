// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ByUidRequest struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByUidRequest) Reset()         { *m = ByUidRequest{} }
func (m *ByUidRequest) String() string { return proto.CompactTextString(m) }
func (*ByUidRequest) ProtoMessage()    {}
func (*ByUidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *ByUidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByUidRequest.Unmarshal(m, b)
}
func (m *ByUidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByUidRequest.Marshal(b, m, deterministic)
}
func (m *ByUidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByUidRequest.Merge(m, src)
}
func (m *ByUidRequest) XXX_Size() int {
	return xxx_messageInfo_ByUidRequest.Size(m)
}
func (m *ByUidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByUidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByUidRequest proto.InternalMessageInfo

func (m *ByUidRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type TokenRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenRequest) Reset()         { *m = TokenRequest{} }
func (m *TokenRequest) String() string { return proto.CompactTextString(m) }
func (*TokenRequest) ProtoMessage()    {}
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *TokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenRequest.Unmarshal(m, b)
}
func (m *TokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenRequest.Marshal(b, m, deterministic)
}
func (m *TokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenRequest.Merge(m, src)
}
func (m *TokenRequest) XXX_Size() int {
	return xxx_messageInfo_TokenRequest.Size(m)
}
func (m *TokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenRequest proto.InternalMessageInfo

func (m *TokenRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type TokenResponse struct {
	IsExpired            bool     `protobuf:"varint,1,opt,name=isExpired,proto3" json:"isExpired,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenResponse) Reset()         { *m = TokenResponse{} }
func (m *TokenResponse) String() string { return proto.CompactTextString(m) }
func (*TokenResponse) ProtoMessage()    {}
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *TokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenResponse.Unmarshal(m, b)
}
func (m *TokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenResponse.Marshal(b, m, deterministic)
}
func (m *TokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenResponse.Merge(m, src)
}
func (m *TokenResponse) XXX_Size() int {
	return xxx_messageInfo_TokenResponse.Size(m)
}
func (m *TokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenResponse proto.InternalMessageInfo

func (m *TokenResponse) GetIsExpired() bool {
	if m != nil {
		return m.IsExpired
	}
	return false
}

type ProfileUpdateRequest struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	PictureUrl           string   `protobuf:"bytes,3,opt,name=picture_url,json=pictureUrl,proto3" json:"picture_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileUpdateRequest) Reset()         { *m = ProfileUpdateRequest{} }
func (m *ProfileUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*ProfileUpdateRequest) ProtoMessage()    {}
func (*ProfileUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *ProfileUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileUpdateRequest.Unmarshal(m, b)
}
func (m *ProfileUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileUpdateRequest.Marshal(b, m, deterministic)
}
func (m *ProfileUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileUpdateRequest.Merge(m, src)
}
func (m *ProfileUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_ProfileUpdateRequest.Size(m)
}
func (m *ProfileUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileUpdateRequest proto.InternalMessageInfo

func (m *ProfileUpdateRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ProfileUpdateRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *ProfileUpdateRequest) GetPictureUrl() string {
	if m != nil {
		return m.PictureUrl
	}
	return ""
}

type ByUserInfoRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByUserInfoRequest) Reset()         { *m = ByUserInfoRequest{} }
func (m *ByUserInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ByUserInfoRequest) ProtoMessage()    {}
func (*ByUserInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *ByUserInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByUserInfoRequest.Unmarshal(m, b)
}
func (m *ByUserInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByUserInfoRequest.Marshal(b, m, deterministic)
}
func (m *ByUserInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByUserInfoRequest.Merge(m, src)
}
func (m *ByUserInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ByUserInfoRequest.Size(m)
}
func (m *ByUserInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByUserInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByUserInfoRequest proto.InternalMessageInfo

func (m *ByUserInfoRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ByUserInfoRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserResponse struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Nickname             string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	ProfilePictureUrl    string   `protobuf:"bytes,4,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserResponse) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *UserResponse) GetProfilePictureUrl() string {
	if m != nil {
		return m.ProfilePictureUrl
	}
	return ""
}

type SaveResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveResponse) Reset()         { *m = SaveResponse{} }
func (m *SaveResponse) String() string { return proto.CompactTextString(m) }
func (*SaveResponse) ProtoMessage()    {}
func (*SaveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *SaveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveResponse.Unmarshal(m, b)
}
func (m *SaveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveResponse.Marshal(b, m, deterministic)
}
func (m *SaveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveResponse.Merge(m, src)
}
func (m *SaveResponse) XXX_Size() int {
	return xxx_messageInfo_SaveResponse.Size(m)
}
func (m *SaveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveResponse proto.InternalMessageInfo

func (m *SaveResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*ByUidRequest)(nil), "pb.ByUidRequest")
	proto.RegisterType((*TokenRequest)(nil), "pb.TokenRequest")
	proto.RegisterType((*TokenResponse)(nil), "pb.TokenResponse")
	proto.RegisterType((*ProfileUpdateRequest)(nil), "pb.ProfileUpdateRequest")
	proto.RegisterType((*ByUserInfoRequest)(nil), "pb.ByUserInfoRequest")
	proto.RegisterType((*UserResponse)(nil), "pb.UserResponse")
	proto.RegisterType((*SaveResponse)(nil), "pb.SaveResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	FindUserByUID(ctx context.Context, in *ByUidRequest, opts ...grpc.CallOption) (*UserResponse, error)
	FindUserByUsernameAndPassword(ctx context.Context, in *ByUserInfoRequest, opts ...grpc.CallOption) (*UserResponse, error)
	SaveProfile(ctx context.Context, in *ProfileUpdateRequest, opts ...grpc.CallOption) (*SaveResponse, error)
	IsExpiredToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error)
	SaveToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*SaveResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) FindUserByUID(ctx context.Context, in *ByUidRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/pb.UserService/FindUserByUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindUserByUsernameAndPassword(ctx context.Context, in *ByUserInfoRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/pb.UserService/FindUserByUsernameAndPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SaveProfile(ctx context.Context, in *ProfileUpdateRequest, opts ...grpc.CallOption) (*SaveResponse, error) {
	out := new(SaveResponse)
	err := c.cc.Invoke(ctx, "/pb.UserService/SaveProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) IsExpiredToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error) {
	out := new(TokenResponse)
	err := c.cc.Invoke(ctx, "/pb.UserService/IsExpiredToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SaveToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*SaveResponse, error) {
	out := new(SaveResponse)
	err := c.cc.Invoke(ctx, "/pb.UserService/SaveToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	FindUserByUID(context.Context, *ByUidRequest) (*UserResponse, error)
	FindUserByUsernameAndPassword(context.Context, *ByUserInfoRequest) (*UserResponse, error)
	SaveProfile(context.Context, *ProfileUpdateRequest) (*SaveResponse, error)
	IsExpiredToken(context.Context, *TokenRequest) (*TokenResponse, error)
	SaveToken(context.Context, *TokenRequest) (*SaveResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_FindUserByUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByUidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindUserByUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/FindUserByUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindUserByUID(ctx, req.(*ByUidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindUserByUsernameAndPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindUserByUsernameAndPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/FindUserByUsernameAndPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindUserByUsernameAndPassword(ctx, req.(*ByUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SaveProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SaveProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/SaveProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SaveProfile(ctx, req.(*ProfileUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_IsExpiredToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).IsExpiredToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/IsExpiredToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).IsExpiredToken(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SaveToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SaveToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/SaveToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SaveToken(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindUserByUID",
			Handler:    _UserService_FindUserByUID_Handler,
		},
		{
			MethodName: "FindUserByUsernameAndPassword",
			Handler:    _UserService_FindUserByUsernameAndPassword_Handler,
		},
		{
			MethodName: "SaveProfile",
			Handler:    _UserService_SaveProfile_Handler,
		},
		{
			MethodName: "IsExpiredToken",
			Handler:    _UserService_IsExpiredToken_Handler,
		},
		{
			MethodName: "SaveToken",
			Handler:    _UserService_SaveToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0x05, 0xbb, 0x1f, 0x30, 0x98, 0x0a, 0xb6, 0x54, 0xb2, 0xac, 0x56, 0x45, 0x7b, 0xe2, 0x52,
	0x4b, 0x6d, 0x55, 0xf5, 0xd0, 0x4b, 0x8b, 0xda, 0x4a, 0xb4, 0x17, 0x64, 0xe2, 0x33, 0x32, 0xf6,
	0x20, 0xad, 0x20, 0xf6, 0x66, 0xd7, 0x26, 0xe1, 0x1f, 0xe4, 0x2f, 0xe5, 0xdf, 0x45, 0xbb, 0x5e,
	0x1b, 0x27, 0x31, 0x52, 0x6e, 0x9e, 0xaf, 0x37, 0xef, 0x8d, 0xdf, 0x02, 0x14, 0x12, 0x85, 0xcf,
	0x45, 0x96, 0x67, 0xc4, 0xe2, 0x1b, 0x3a, 0x05, 0x67, 0x7e, 0x0c, 0x59, 0x12, 0xe0, 0x55, 0x81,
	0x32, 0x27, 0x23, 0xb0, 0x0b, 0x96, 0xb8, 0xdd, 0x69, 0x77, 0x66, 0x07, 0xea, 0x93, 0xfe, 0x04,
	0xe7, 0x22, 0xdb, 0x61, 0x5a, 0x75, 0x78, 0xd0, 0x53, 0x18, 0x69, 0x74, 0x89, 0xba, 0xad, 0x1f,
	0xd4, 0x31, 0x99, 0xc0, 0xcb, 0x5c, 0xf5, 0xba, 0x96, 0x2e, 0x94, 0x01, 0xfd, 0x04, 0x43, 0x83,
	0x20, 0x79, 0x96, 0x4a, 0x24, 0xef, 0xa1, 0xcf, 0xe4, 0x9f, 0x1b, 0xce, 0x04, 0x96, 0xab, 0x7a,
	0xc1, 0x29, 0x41, 0x11, 0x26, 0x4b, 0x91, 0x6d, 0xd9, 0x1e, 0x43, 0x9e, 0x44, 0x39, 0x9e, 0xa5,
	0xa6, 0xa8, 0xa4, 0x2c, 0xde, 0x69, 0x2a, 0xe5, 0xc6, 0x3a, 0x26, 0x1f, 0x61, 0xc0, 0x59, 0x9c,
	0x17, 0x02, 0xd7, 0x85, 0xd8, 0xbb, 0xb6, 0x2e, 0x83, 0x49, 0x85, 0x62, 0x4f, 0xff, 0xc3, 0x78,
	0x7e, 0x0c, 0x25, 0x8a, 0x45, 0xba, 0xcd, 0x9e, 0x23, 0xce, 0x83, 0x1e, 0x8f, 0xa4, 0xbc, 0xce,
	0x44, 0x52, 0x6d, 0xab, 0x62, 0x7a, 0xdb, 0x05, 0x47, 0x61, 0xd5, 0x12, 0x5b, 0xc9, 0xd6, 0xd0,
	0xd6, 0x53, 0xe8, 0x5a, 0x88, 0xfd, 0x48, 0x88, 0x0f, 0x6f, 0x79, 0x79, 0x8e, 0x75, 0x53, 0xd0,
	0x0b, 0xdd, 0x36, 0x36, 0xa5, 0xe5, 0x49, 0xd7, 0x0c, 0x9c, 0x55, 0x74, 0xc0, 0x9a, 0x89, 0x0b,
	0xaf, 0x65, 0x11, 0xc7, 0x28, 0xa5, 0x39, 0x75, 0x15, 0x7e, 0xb9, 0xb3, 0x60, 0xa0, 0x48, 0xaf,
	0x50, 0x1c, 0x58, 0x8c, 0xe4, 0x1b, 0x0c, 0xff, 0xb2, 0x34, 0x51, 0xa9, 0xf9, 0x31, 0x5c, 0xfc,
	0x26, 0x23, 0x9f, 0x6f, 0xfc, 0xa6, 0x3d, 0x3c, 0x9d, 0x69, 0x0a, 0xa5, 0x1d, 0xf2, 0x0f, 0x3e,
	0x34, 0xc6, 0x8c, 0xa4, 0x5f, 0x69, 0xb2, 0x34, 0xc7, 0x21, 0xef, 0x0c, 0xcc, 0xc3, 0x5b, 0xb7,
	0x62, 0xfd, 0x80, 0x81, 0x22, 0x6f, 0xfe, 0x3f, 0x71, 0x55, 0x4b, 0x9b, 0x19, 0xca, 0xe1, 0xa6,
	0x4e, 0xda, 0x21, 0xdf, 0xe1, 0xcd, 0xa2, 0x72, 0x91, 0x36, 0x5c, 0x29, 0xa0, 0xe9, 0x5e, 0x6f,
	0xdc, 0xc8, 0xd4, 0x83, 0x9f, 0xa1, 0xaf, 0xa0, 0xce, 0xcd, 0xb4, 0xec, 0xda, 0xbc, 0xd2, 0x4f,
	0xe8, 0xeb, 0x7d, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xf5, 0x54, 0x7f, 0x50, 0x03, 0x00, 0x00,
}
